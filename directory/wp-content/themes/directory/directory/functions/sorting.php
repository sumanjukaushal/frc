<?php

// Sorting
add_filter('posts_join', 'directorySortingJoin',10,2);
function directorySortingJoin($join, $query) {
	global $wpdb, $aitThemeOptions;
	if ($query->is_main_query() && !$query->is_admin && ((isset($_GET['dir-search'])) || (isset($query->query_vars["ait-dir-item-category"])) || (isset($query->query_vars["ait-dir-item-location"])))) {
		$sql = "";
		// default ordering
		$orderby = (isset($aitThemeOptions->directory->defaultOrderby)) ? $aitThemeOptions->directory->defaultOrderby : 'post_date';
		// get from get parameters
		if (!empty($_GET['orderby'])) {
			$orderby = $_GET['orderby'];
		}
		if ($orderby == 'rating') {
			$sql .= " LEFT JOIN {$wpdb->postmeta} rating ON ({$wpdb->posts}.ID = rating.post_id AND rating.meta_key IN ('rating_full'))";
		}
		if ($orderby == 'packages') {
			directorySaveUserPackagesToDb();
			$sql .= " LEFT JOIN {$wpdb->usermeta} packages ON ({$wpdb->posts}.post_author = packages.user_id AND packages.meta_key IN ('dir_package'))";
		}
		if (isset($aitThemeOptions->directory->showFeaturedItemsFirst)) {
			$sql .= " LEFT JOIN {$wpdb->postmeta} featured ON ({$wpdb->posts}.ID = featured.post_id AND featured.meta_key IN ('dir_featured'))";
		}
		$join .= $sql;
	}
	return $join;
}
add_filter('posts_orderby', 'directorySortingOrderby',10,2);
function directorySortingOrderby($orderby, $query) {
	global $wpdb, $aitThemeOptions;

	if ( is_front_page() && is_home() ) {
	  // Default homepage
	} elseif ( is_front_page() ) {
	  // static homepage
	} elseif ( is_home() ) {
	  // blog page
		return $orderby;
	} elseif(isset($query->query_vars['post_type']) && $query->query_vars['post_type'] == 'post') {
		return $orderby;
	} else {
	  //everything else
	}


	if ($query->is_main_query() && !$query->is_admin && ((isset($_GET['dir-search'])) || (isset($query->query_vars["ait-dir-item-category"])) || (isset($query->query_vars["ait-dir-item-location"])))) {
		$sql = "";
		// default ordering
		$orderby = (isset($aitThemeOptions->directory->defaultOrderby)) ? $aitThemeOptions->directory->defaultOrderby : 'post_date';
		$order = (isset($aitThemeOptions->directory->defaultOrder)) ? $aitThemeOptions->directory->defaultOrder : 'DESC';
		// get from get parameters
		if (!empty($_GET['orderby'])) {
			$orderby = $_GET['orderby'];
		}
		if (!empty($_GET['order'])) {
			$order = $_GET['order'];
		}
		$queryIssue = 0;
		if ($orderby == 'rating') {
			if (isset($aitThemeOptions->directory->showFeaturedItemsFirst)) {
			    $queryIssue = 1;
				$sql1 = "featured.meta_value DESC, convert(rating.meta_value, decimal) {$order}"; //RASU - FRC
				$sql = "convert(rating.meta_value, decimal) {$order}";
			} else {
			    $queryIssue = 2;
				$sql = "convert(rating.meta_value, decimal) {$order}";
			}
		} else if ($orderby == 'packages') {
			if (isset($aitThemeOptions->directory->showFeaturedItemsFirst)) {
			    $queryIssue = 3;
				$sql1 = "featured.meta_value DESC, packages.meta_value {$order}"; //RASU - FRC
				$sql = "packages.meta_value {$order}"; 
			} else {
			    $queryIssue = 4;
				$sql = "packages.meta_value {$order}";
			}
		} else {
			if (isset($aitThemeOptions->directory->showFeaturedItemsFirst)) {
			    $queryIssue = 5;
				$sql1 = "featured.meta_value DESC, {$wpdb->posts}.{$orderby} {$order}"; //RASU - FRC
				$sql = "{$wpdb->posts}.{$orderby} {$order}"; //featured.meta_value DESC, 
			} else {
			    $queryIssue = 6;
				$sql = "{$wpdb->posts}.{$orderby} {$order}";
			}
		}
		$orderby = $sql;
	}
	if($queryIssue){
	    $headers = array('Content-Type: text/html; charset=UTF-8');
	    $fName = "/home/freerang/public_html/directory/wp-content/themes/directory/functions/sorting.php";
	    $emailBody = "Generated by: $fName<br/><br/>sql1:{$sql1} <br/><br/> sql:{$sql}<br/><br/>orderby:{$orderby}";
	    //wp_mail('kalyanrajiv@gmail.com', "Issue by sorting.php - {$queryIssue}", $emailBody, $headers);
	}
	return $orderby;
}
// Save directory packages for sorting
function directorySaveUserPackagesToDb() {
	$users = get_users();
	// capabilities list
	/*Because user levels will stay in between 1..10 See here: http://codex.wordpress.org/User_Levels*/
	/*
		User Level 0 converts to Subscriber
		User Level 1 converts to Contributor
		User Level 2 converts to Author
		User Level 3 converts to Editor
		User Level 4 converts to Editor
		User Level 5 converts to Editor
		User Level 6 converts to Editor
		User Level 7 converts to Editor
		User Level 8 converts to Administrator
		User Level 9 converts to Administrator
		User Level 10 converts to Administrator
	**/
	$roles = array(
		'administrator' => 10,
		'directory_7' => 7, //$25 +
		'directory_6' => 7, //Help Outs - rasa
		'directory_5' => 7,	//park over
		'directory_4' => 7,	//house sitting
		'directory_3' => 7,	//low cost sites
		'directory_2' => 6,	//business listing
		'directory_1' => 5, //listing manager
		'editor' => 4,
		'author' => 3,
		'contributor' => 2,
		'subscriber' => 1
	);
	foreach ($users as $user) {
		if (isset($user->roles[0])) {
			if (array_key_exists($user->roles[0], $roles)) {
				update_user_meta($user->ID, 'dir_package', $roles[$user->roles[0]]);
			} else {
				update_user_meta($user->ID, 'dir_package', 0);
			}
		}
	}
}